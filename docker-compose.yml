version: '3.6'
services:

  api:
    build: .
    image: beer-api
    restart: always
    depends_on:
      - mongo
      - mysql
    ports:
      - 8000:8000
    environment:
      # MySQL
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_PORT: 3306
      MYSQL_HOST: mysql
      # MONGO MONGO MONGO I DON'T WANNA LEAVE THE CONGO
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    container_name: beer-api

  mysql:
    image: mysql:5
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db-init/:/docker-entrypoint-initdb.d
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    container_name: mysql-server

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./db-init/:/docker-entrypoint-initdb.d
    ports:
      - 27017:27017
    environment:
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    container_name: mongo-server


volumes:
  mysql-data:
    name: beer-mysql-data
  mongo-data:
    name: user-mongo-data
